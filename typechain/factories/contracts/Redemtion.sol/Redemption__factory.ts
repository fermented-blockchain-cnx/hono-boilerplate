/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Redemption,
  RedemptionInterface,
} from "../../../contracts/Redemtion.sol/Redemption";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_t",
        type: "address",
      },
    ],
    name: "Existing",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getItems",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_tokenId",
        type: "uint32",
      },
    ],
    name: "getTokenUriFromAddress",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "getUrl",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nft",
    outputs: [
      {
        internalType: "contract DustBoyNFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "_tokenId",
        type: "uint32",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uriMap",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040526027608081815290620011ac60a03980516200002991600391602090910190620000eb565b50604080518082019091526004808252630b9b5c0d60e21b6020909201918252620000559181620000eb565b503480156200006357600080fd5b506200006f336200009b565b600180546001600160a01b0319167363e74c374c02b6c12467f56747e4ab9904c1a364179055620001ce565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000f99062000191565b90600052602060002090601f0160209004810192826200011d576000855562000168565b82601f106200013857805160ff191683800117855562000168565b8280016001018555821562000168579182015b82811115620001685782518255916020019190600101906200014b565b50620001769291506200017a565b5090565b5b808211156200017657600081556001016200017b565b600181811c90821680620001a657607f821691505b60208210811415620001c857634e487b7160e01b600052602260045260246000fd5b50919050565b610fce80620001de6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638e0273bb116100665780638e0273bb14610121578063dd2eb9f314610151578063e379e42714610171578063e92cde2114610184578063f2fde38b1461019757600080fd5b80631a9c4afb146100a357806347ccca02146100b85780634d736655146100e8578063715018a6146101085780638da5cb5b14610110575b600080fd5b6100b66100b1366004610c86565b6101aa565b005b6001546100cb906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100fb6100f6366004610d17565b6101d5565b6040516100df9190610d47565b6100b66103e2565b6000546001600160a01b03166100cb565b6100b661012f366004610d17565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61016461015f366004610d8b565b61044d565b6040516100df9190610dd4565b61016461017f366004610e07565b6104e7565b610164610192366004610d17565b610573565b6100b66101a5366004610d17565b610824565b63ffffffff8216600090815260026020908152604090912082516101d092840190610b65565b505050565b6001546040516370a0823160e01b81526001600160a01b0383811660048301526060926000929116906370a082319060240160206040518083038186803b15801561021f57600080fd5b505afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102579190610e22565b905060008167ffffffffffffffff81111561027457610274610c17565b60405190808252806020026020018201604052801561029d578160200160208202803683370190505b50905060005b6001546040516370a0823160e01b81526001600160a01b038781166004830152909116906370a082319060240160206040518083038186803b1580156102e857600080fd5b505afa1580156102fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103209190610e22565b8110156103da57600154604051632f745c5960e01b81526001600160a01b0387811660048301526024820184905290911690632f745c599060440160206040518083038186803b15801561037357600080fd5b505afa158015610387573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103ab9190610e22565b8282815181106103bd576103bd610e3b565b6020908102919091010152806103d281610e67565b9150506102a3565b509392505050565b6000546001600160a01b031633146104415760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b61044b60006108ef565b565b6002602052600090815260409020805461046690610e82565b80601f016020809104026020016040519081016040528092919081815260200182805461049290610e82565b80156104df5780601f106104b4576101008083540402835291602001916104df565b820191906000526020600020905b8154815290600101906020018083116104c257829003601f168201915b505050505081565b60015460405163c87b56dd60e01b815263ffffffff831660048201526060916001600160a01b03169063c87b56dd9060240160006040518083038186803b15801561053157600080fd5b505afa158015610545573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261056d9190810190610ebd565b92915050565b604080516110008082526110208201909252606091600091906020820181803683370190505090506105b4816040518060200160405280600081525061093f565b61064881600380546105c590610e82565b80601f01602080910402602001604051908101604052809291908181526020018280546105f190610e82565b801561063e5780601f106106135761010080835404028352916020019161063e565b820191906000526020600020905b81548152906001019060200180831161062157829003601f168201915b505050505061093f565b600154604051632f745c5960e01b81526001600160a01b038581166004830152600060248301526106e19284926106dc9290911690632f745c59906044015b60206040518083038186803b15801561069f57600080fd5b505afa1580156106b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d79190610e22565b6109ba565b61093f565b6106f281600480546105c590610e82565b60015b6001546040516370a0823160e01b81526001600160a01b038681166004830152909116906370a082319060240160206040518083038186803b15801561073a57600080fd5b505afa15801561074e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107729190610e22565b8110156108135761079c82604051806040016040528060018152602001600b60fa1b81525061093f565b6107ad82600380546105c590610e82565b600154604051632f745c5960e01b81526001600160a01b038681166004830152602482018490526107f09285926106dc9290911690632f745c5990604401610687565b61080182600480546105c590610e82565b8061080b81610e67565b9150506106f5565b61081c82610ab8565b949350505050565b6000546001600160a01b0316331461087e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610438565b6001600160a01b0381166108e35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610438565b6108ec816108ef565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61094a828251610b18565b6109965760405162461bcd60e51b815260206004820152601a60248201527f4275666665722e617070656e643a206e6f2063617061636974790000000000006044820152606401610438565b6020820151815160408401820183516020850160045afa5090510160209190910152565b6060816109de5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610a0857806109f281610e67565b9150610a019050600a83610f41565b91506109e2565b60008167ffffffffffffffff811115610a2357610a23610c17565b6040519080825280601f01601f191660200182016040528015610a4d576020820181803683370190505b5090505b841561081c57610a62600183610f55565b9150610a6f600a86610f6c565b610a7a906030610f80565b60f81b818381518110610a8f57610a8f610e3b565b60200101906001600160f81b031916908160001a905350610ab1600a86610f41565b9450610a51565b6060610ac5826000610b18565b610b115760405162461bcd60e51b815260206004820152601f60248201527f4275666665722e746f537472696e673a20696e76616c696420627566666572006044820152606401610438565b5060200190565b8151602080840151600092918210801590610b3d5750610b39602083610f55565b8111155b8015610b5c5750610b4f602083610f55565b610b598583610f80565b11155b95945050505050565b828054610b7190610e82565b90600052602060002090601f016020900481019282610b935760008555610bd9565b82601f10610bac57805160ff1916838001178555610bd9565b82800160010185558215610bd9579182015b82811115610bd9578251825591602001919060010190610bbe565b50610be5929150610be9565b5090565b5b80821115610be55760008155600101610bea565b803563ffffffff81168114610c1257600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610c5657610c56610c17565b604052919050565b600067ffffffffffffffff821115610c7857610c78610c17565b50601f01601f191660200190565b60008060408385031215610c9957600080fd5b610ca283610bfe565b9150602083013567ffffffffffffffff811115610cbe57600080fd5b8301601f81018513610ccf57600080fd5b8035610ce2610cdd82610c5e565b610c2d565b818152866020838501011115610cf757600080fd5b816020840160208301376000602083830101528093505050509250929050565b600060208284031215610d2957600080fd5b81356001600160a01b0381168114610d4057600080fd5b9392505050565b6020808252825182820181905260009190848201906040850190845b81811015610d7f57835183529284019291840191600101610d63565b50909695505050505050565b600060208284031215610d9d57600080fd5b5035919050565b60005b83811015610dbf578181015183820152602001610da7565b83811115610dce576000848401525b50505050565b6020815260008251806020840152610df3816040850160208701610da4565b601f01601f19169190910160400192915050565b600060208284031215610e1957600080fd5b610d4082610bfe565b600060208284031215610e3457600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415610e7b57610e7b610e51565b5060010190565b600181811c90821680610e9657607f821691505b60208210811415610eb757634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610ecf57600080fd5b815167ffffffffffffffff811115610ee657600080fd5b8201601f81018413610ef757600080fd5b8051610f05610cdd82610c5e565b818152856020838501011115610f1a57600080fd5b610b5c826020830160208601610da4565b634e487b7160e01b600052601260045260246000fd5b600082610f5057610f50610f2b565b500490565b600082821015610f6757610f67610e51565b500390565b600082610f7b57610f7b610f2b565b500690565b60008219821115610f9357610f93610e51565b50019056fea264697066735822122047f5ef3bbf4ff1d2379a685784c31590a02f73246a8c34a091b17c56b49ced1b64736f6c6343000809003368747470733a2f2f64726976652e676f6f676c652e636f6d2f64726976652f666f6c646572732f";

type RedemptionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RedemptionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Redemption__factory extends ContractFactory {
  constructor(...args: RedemptionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Redemption> {
    return super.deploy(overrides || {}) as Promise<Redemption>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Redemption {
    return super.attach(address) as Redemption;
  }
  override connect(signer: Signer): Redemption__factory {
    return super.connect(signer) as Redemption__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RedemptionInterface {
    return new utils.Interface(_abi) as RedemptionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Redemption {
    return new Contract(address, _abi, signerOrProvider) as Redemption;
  }
}
